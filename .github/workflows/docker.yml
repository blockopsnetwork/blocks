name: Telescope Docker

# Cancel workflow if there is a new change to the branch.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

on:
  push:
    branches: [main]
    tags:
      - "*"
  merge_group:
  pull_request:
    branches:
      - main
      - 'feature/**'
      - 'v[0-9]+.[0-9]+'
    # This needs to be declared explicitly so that the job is actually
    # run when moved out of draft.
    # types: [opened, synchronize, reopened, ready_for_review]

jobs:
  build-and-push-docker-image-amd64:
    name: Build and push docker image for amd64
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: List cached docker images
        run: docker image ls

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
            platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: blockopsnetwork/telescope
          flavor: |
            latest=false
          tags: |
            type=raw,value={{date 'YYYY-MM-DD'}}-{{sha}}
            type=ref,event=tag
            type=edge

      - name: Free disk space
        run: |
            sudo swapoff -a
            sudo rm -f /swapfile
            sudo apt clean
            docker rmi $(docker image ls -aq) || true
            df -h

      - name: Build and push telescope image for amd64
        uses: docker/build-push-action@v6
        with:
          file: ./cmd/agent/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          platforms: 'linux/amd64'

  build-and-push-docker-image-arm64:
    name: Build and push docker image for arm64
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: List cached docker images
        run: docker image ls

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
            platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: blockopsnetwork/telescope
          flavor: |
            latest=false
          tags: |
            type=raw,value={{date 'YYYY-MM-DD'}}-{{sha}}
            type=ref,event=tag
            type=edge

      - name: Free disk space
        run: |
            sudo swapoff -a
            sudo rm -f /swapfile
            sudo apt clean
            docker rmi $(docker image ls -aq) || true
            df -h

      - name: Build and push telescope image for arm64
        uses: docker/build-push-action@v6
        with:
          file: ./cmd/agent/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          platforms: 'linux/arm64'

  create-manifest:
    name: Create and push Docker manifest list
    runs-on: ubuntu-latest
    needs: [build-and-push-docker-image-amd64, build-and-push-docker-image-arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create and push manifest list
        run: |
          docker manifest create blockopsnetwork/telescope:${{ steps.meta.outputs.tags }} \
            --amend blockopsnetwork/telescope:linux-amd64 \
            --amend blockopsnetwork/telescope:linux-arm64
          docker manifest push blockopsnetwork/telescope:${{ steps.meta.outputs.tags }}
